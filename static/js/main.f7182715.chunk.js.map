{"version":3,"sources":["actions/index.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","pages/Login.js","components/Selects.jsx","components/Form.jsx","pages/Wallet.js","App.js","serviceWorker.js","index.js"],"names":["SUB","INITIAL_STATE","email","user","state","action","type","payload","currencies","expenses","wallet","expense","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Login","props","handleChange","bind","inputsCheck","password","isButtonDisabled","target","value","name","this","setState","checkEmail","match","length","sendEmail","htmlFor","placeholder","data-testid","id","onChange","minLength","to","disabled","onClick","React","Component","connect","dispatch","Selects","event","key","Form","description","currency","method","tag","sendExpenses","theCurrencies","fetchCoinState","USDTCurrency","withoutUSDT","splice","array","Object","values","JSON","parse","UDSTDeleted","map","code","addingExpenseState","nextOne","newExpense","exchangeRates","stringify","fetch","then","response","json","currencie","addingExpense","Wallet","totalExpenses","reduce","acc","findCurrentCurrency","find","parseFloat","ask","userEmail","App","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f7182715.chunk.js","sourcesContent":["export const SUB = 'SUBMIT';\n\nexport const actionLogin = (email) => ({\n  type: SUB,\n  payload: {\n    email,\n  },\n});\n\nexport const savingCurrencies = (currencies) => ({\n  type: 'SAVE',\n  payload: {\n    currencies,\n  },\n});\n\nexport function fetchCoin() {\n  return (dispatch) => {\n    fetch('https://economia.awesomeapi.com.br/json/all')\n      .then((response) => response.json())\n      .then((currencie) => {\n        dispatch(savingCurrencies(currencie));\n      });\n  };\n}\n\nexport const addingExpense = (expense) => ({\n  type: 'ADD',\n  payload: {\n    expense,\n  },\n});\n","import { SUB } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SUB:\n    return {\n      ...state,\n      email: action.payload.email,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","const INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case 'SAVE':\n    return {\n      ...state,\n      currencies: action.payload.currencies,\n    };\n  case 'ADD':\n    return {\n      ...state,\n      expenses: [...state.expenses, action.payload.expense],\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\n\nconst rootReducer = combineReducers({ user, wallet });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { actionLogin } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.inputsCheck = this.inputsCheck.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n      isButtonDisabled: true,\n    };\n  }\n\n  handleChange({ target: { value, name } }) {\n    this.setState({ [name]: value }, this.inputsCheck);\n  }\n\n  inputsCheck() {\n    const regex = /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n    const checkEmail = regex;\n    const { email, password } = this.state;\n    const minLengthPassword = 6;\n\n    const isValid = email.match(checkEmail) && password.length >= minLengthPassword;\n\n    if (isValid) {\n      this.setState({ isButtonDisabled: false });\n    } else {\n      this.setState({ isButtonDisabled: true });\n    }\n  }\n\n  render() {\n    const { email, isButtonDisabled } = this.state;\n    const { sendEmail } = this.props;\n    return (\n      <main>\n        <h1>Trybe Wallet</h1>\n        <label htmlFor=\"email-input-id\">\n          E-mail\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Coloque seu email aqui!\"\n            data-testid=\"email-input\"\n            id=\"email-input-id\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <label htmlFor=\"password-input-id\">\n          Senha\n          <input\n            type=\"password\"\n            minLength=\"6\"\n            placeholder=\"Insira sua senha aqui!\"\n            data-testid=\"password-input\"\n            id=\"password-input-id\"\n            name=\"password\"\n            onChange={ this.handleChange }\n          />\n        </label>\n        <Link to=\"/carteira\">\n          <button\n            type=\"button\"\n            disabled={ isButtonDisabled }\n            onClick={ () => sendEmail(email) }\n          >\n            Entrar\n          </button>\n        </Link>\n      </main>\n    );\n  }\n}\nconst mapDispatchToProps = (dispatch) => ({\n  sendEmail: (state) => dispatch(actionLogin(state)),\n});\n\nLogin.propTypes = {\n  sendEmail: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Selects extends React.Component {\n  render() {\n    const { handleChange } = this.props;\n    return (\n      <>\n        <label htmlFor=\"method\">\n          MÃ©todo de pagamento:\n          <select\n            id=\"method\"\n            name=\"method\"\n            onChange={ (event) => handleChange(event) }\n          >\n            <option key=\"Dinheiro\">Dinheiro</option>\n            <option key=\"CartÃ£o de crÃ©dito\">CartÃ£o de crÃ©dito</option>\n            <option key=\"CartÃ£o de dÃ©bito\">CartÃ£o de dÃ©bito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Tag:\n          <select id=\"tag\" name=\"tag\" onChange={ (event) => handleChange(event) }>\n            <option key=\"AlimentaÃ§Ã£o\">AlimentaÃ§Ã£o</option>\n            <option key=\"Lazer\">Lazer</option>\n            <option key=\"Trabalho\">Trabalho</option>\n            <option key=\"Transporte\">Transporte</option>\n            <option key=\"SaÃºde\">SaÃºde</option>\n          </select>\n        </label>\n      </>\n    );\n  }\n}\n\nSelects.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Selects;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchCoin, addingExpense } from '../actions';\nimport Selects from './Selects';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      value: 0,\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'AlimentaÃ§Ã£o',\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.sendExpenses = this.sendExpenses.bind(this);\n    this.theCurrencies = this.theCurrencies.bind(this);\n  }\n\n  componentDidMount() {\n    const { fetchCoinState } = this.props;\n    fetchCoinState();\n  }\n\n  handleChange({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  UDSTDeleted(USDTCurrency) {\n    const withoutUSDT = [...USDTCurrency];\n    withoutUSDT.splice(1, 1);\n    return withoutUSDT;\n  }\n\n  theCurrencies() {\n    const { currencies } = this.props;\n    const array = Object.values(JSON.parse(currencies));\n    const noUSTD = this.UDSTDeleted(array);\n    return noUSTD.map(({ code }) => (\n      <option key={ code } value={ code }>{ code }</option>));\n  }\n\n  async sendExpenses() {\n    const { expenses, fetchCoinState, addingExpenseState } = this.props;\n    const nextOne = () => (expenses.length);\n\n    await fetchCoinState();\n    const { value, description, currency, method, tag } = this.state;\n    const { currencies } = this.props;\n    const newExpense = {\n      id: nextOne(),\n      value,\n      description,\n      currency,\n      method,\n      tag,\n      exchangeRates: JSON.parse(currencies),\n      // https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse\n    };\n    addingExpenseState(newExpense);\n  }\n\n  render() {\n    return (\n      <form>\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            type=\"number\"\n            id=\"value\"\n            name=\"value\"\n            onChange={ (event) => this.handleChange(event) }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          DescriÃ§Ã£o:\n          <input\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            onChange={ (event) => this.handleChange(event) }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            id=\"currency\"\n            name=\"currency\"\n            onChange={ (event) => this.handleChange(event) }\n          >\n            { this.theCurrencies() }\n          </select>\n        </label>\n        <Selects handleChange={ this.handleChange } />\n        <button type=\"button\" onClick={ () => this.sendExpenses() }>\n          Adicionar despesas\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n  currencies: JSON.stringify(state.wallet.currencies),\n  // https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/JSON/Stringify\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCoinState: () => dispatch(fetchCoin()),\n  addingExpenseState: (expense) => dispatch(addingExpense(expense)),\n});\n\nForm.propTypes = {\n  fetchCoinState: PropTypes.func.isRequired,\n  addingExpenseState: PropTypes.func.isRequired,\n  currencies: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n// import { fetchCoin } from '../actions';\n// import Header from '../components/Header';\nimport Form from '../components/Form';\n\nclass Wallet extends React.Component {\n  constructor() {\n    super();\n\n    this.totalExpenses = this.totalExpenses.bind(this);\n  }\n\n  totalExpenses() {\n    const { expenses } = this.props;\n    const ONE = 1;\n    const ZERO = 0;\n    // I made it because o f the \"magic numbers\"\n\n    if (expenses.length >= ONE) {\n      const total = expenses.reduce((acc, { value, currency, exchangeRates }) => {\n        const findCurrentCurrency = Object\n          .values(exchangeRates).find(({ code }) => currency === code);\n        const sencondPartValue = parseFloat(findCurrentCurrency.ask) * parseFloat(value);\n        // https://developer.mozilla.org/pt-BR/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\n        return acc + sencondPartValue;\n      }, 0);\n      return total;\n      // For the logic of reduce above I was inspired by AndrÃ© de Bem's project\n      // https://github.com/tryber/sd-010-b-project-trybewallet/pull/71\n    }\n    return ZERO;\n  }\n\n  render() {\n    const { userEmail } = this.props;\n    return (\n      <>\n        <header>\n          <h1 data-testid=\"email-field\">\n            Email:\n            { userEmail }\n          </h1>\n          <h2 data-testid=\"total-field\">\n            Total:\n            { this.totalExpenses() }\n          </h2>\n          <h3 data-testid=\"header-currency-field\">\n            BRL\n          </h3>\n        </header>\n        {/* Insert Component Header after */}\n        <Form />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nWallet.propTypes = {\n  userEmail: PropTypes.string.isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default connect(mapStateToProps, null)(Wallet);\n","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/carteira\" component={ Wallet } />\n      <Route exact path=\"/trybewallet\" component={ Login } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}